@use "sass:map";
@use "../../scss/base/input.scss";
@use "../../scss/base/shadows.scss";
@use "../../scss/themes.scss";
@use "../../scss/mixins/any.scss";
@use "../../scss/mixins/form.scss";

$field-sizes: "small", "medium", "large";

.rc-field {
  @include any.rc-component;
  @include form.border-size;
  @include form.border-color;
  @include form.font-size--bySize($field-sizes);
  @include form.height--bySize($field-sizes);

  border-radius: input.$border-radius;
  position: relative;
  display: inline-flex;
  align-items: center;
  width: 200px;
  transition: input.$transition;
  background: input.$background;

  &::before {
    position: absolute;
    height: calc(
      100% + #{input.$border-top-width} + #{input.$border-bottom-width}
    );
    width: calc(
      100% + #{input.$border-left-width} + #{input.$border-right-width}
    );
    left: -#{input.$border-left-width};
    top: -#{input.$border-top-width};
    content: "";
    box-shadow: shadows.$size--closed;
    color: transparent;
    opacity: 0;
    transition: input.$transition;
    border-radius: input.$border-radius;
  }
}

.rc-field--focused {
  &::before {
    box-shadow: shadows.$size;
    opacity: 1;
  }
}

@each $kind in themes.$kinds {
  .rc-field--#{$kind} {
    border-bottom-color: map.get(themes.$colors, $kind);

    &.rc-field--focused {
      &::before {
        z-index: 3;
        color: map.get(themes.$shadows, $kind);
      }
    }
  }
}

@each $state in "invalid", "required" {
  .rc-field--#{$state} {
    border-bottom-color: map.get(themes.$colors, $state);

    &.rc-field--focused {
      &::before {
        z-index: 3;
        color: map.get(themes.$shadows, $state);
      }
    }
  }
}

.rc-field--disabled {
  opacity: input.$opacity--disabled;
  pointer-events: none;
  cursor: auto;
}

.rc-field--small {
  padding-left: 10px;
  padding-right: 6px;
}

.rc-field--medium {
  padding-left: 13px;
  padding-right: 8px;
}

.rc-field--large {
  padding-left: 16px;
  padding-right: 10px;
}
